/Server/Microsoft/ethernetCsmacd:
  description: "Microsoft Windows network interface monitoring. (PowerShell Get-Counter)"
  targetPythonClass: "Products.ZenModel.IpInterface"

  datasources:
    bytesReceivedSec:
      type: WinRS
      resource: \Bytes Received/sec
      strategy: powershell Get-Counter
      component: "${here/id}"

      datapoints:
        bytesReceivedSec:
          rrdmin: 0
          aliases:
            inputOctets__bytes: ""

    bytesSentSec:
      type: WinRS
      resource: \Bytes Sent/sec
      strategy: powershell Get-Counter
      component: "${here/id}"

      datapoints:
        bytesSentSec:
          rrdmin: 0
          aliases:
            outputOctets__bytes: ""

    packetsReceivedSec:
      type: WinRS
      resource: \Packets Received/sec
      strategy: powershell Get-Counter
      component: "${here/id}"

      datapoints:
        packetsReceivedSec: GAUGE_MIN_0

    packetsSentSec:
      type: WinRS
      resource: \Packets Sent/sec
      strategy: powershell Get-Counter
      component: "${here/id}"

      datapoints:
        packetsSentSec: GAUGE_MIN_0

    packetsReceivedErrors:
      type: WinRS
      resource: \Packets Received Errors
      strategy: powershell Get-Counter
      component: "${here/id}"

      datapoints:
        packetsReceivedErrors:
          rrdmin: 0
          aliases:
            ifInErrors: ""

    packetsSentErrors:
      type: WinRS
      resource: \Packets Outbound Errors
      strategy: powershell Get-Counter
      component: "${here/id}"

      datapoints:
        packetsSentErrors:
          rrdmin: 0
          aliases:
            ifOutErrors: ""

  thresholds:
    "high utilization":
      type: MinMaxThreshold
      dsnames: ["bytesReceivedSec", "bytesSentSec"]
      maxval: "(here.speed or 1e9) / 8 * .75"
      eventClass: "/Status/Interface"
      severity: Warning

  graphs:
    Throughput:
      units: bits/sec
      miny: 0

      graphpoints:
        Inbound:
          dpName: bytesReceivedSec
          rpn: 8,*
          format: "%7.2lf%s"

        Outbound:
          dpName: bytesReceivedSec
          rpn: 8,*
          format: "%7.2lf%s"

    Packets:
      units: packets/sec
      miny: 0

      graphpoints:
        Inbound:
          dpName: packetsReceivedSec
          format: "%7.2lf%s"

        Outbound:
          dpName: packetsSentSec
          format: "%7.2lf%s"

    Errors:
      units: errors/sec
      miny: 0

      graphpoints:
        Receive:
          dpName: packetsReceivedErrors
          format: "%7.2lf%s"

        Send:
          dpName: packetsSentErrors
          format: "%7.2lf%s"


##############################################################################

/Server/Microsoft/ethernetCsmacd-TypePerf:
  description: "Microsoft Windows network interface monitoring. (typeperf)"
  targetPythonClass: "Products.ZenModel.IpInterface"

  datasources:
    bytesReceivedSec:
      type: WinRS
      resource: \Bytes Received/sec
      strategy: typeperf -sc1
      component: "${here/id}"

      datapoints:
        bytesReceivedSec:
          rrdmin: 0
          aliases:
            inputOctets__bytes: ""

    bytesSentSec:
      type: WinRS
      resource: \Bytes Sent/sec
      strategy: typeperf -sc1
      component: "${here/id}"

      datapoints:
        bytesSentSec:
          rrdmin: 0
          aliases:
            outputOctets__bytes: ""

    packetsReceivedSec:
      type: WinRS
      resource: \Packets Received/sec
      strategy: typeperf -sc1
      component: "${here/id}"

      datapoints:
        packetsReceivedSec: GAUGE_MIN_0

    packetsSentSec:
      type: WinRS
      resource: \Packets Sent/sec
      strategy: typeperf -sc1
      component: "${here/id}"

      datapoints:
        packetsSentSec: GAUGE_MIN_0

    packetsReceivedErrors:
      type: WinRS
      resource: \Packets Received Errors
      strategy: typeperf -sc1
      component: "${here/id}"

      datapoints:
        packetsReceivedErrors:
          rrdmin: 0
          aliases:
            ifInErrors: ""

    packetsSentErrors:
      type: WinRS
      resource: \Packets Outbound Errors
      strategy: typeperf -sc1
      component: "${here/id}"

      datapoints:
        packetsSentErrors:
          rrdmin: 0
          aliases:
            ifOutErrors: ""

  thresholds:
    "high utilization":
      type: MinMaxThreshold
      dsnames: ["bytesReceivedSec", "bytesSentSec"]
      maxval: "(here.speed or 1e9) / 8 * .75"
      eventClass: "/Status/Interface"
      severity: Warning

  graphs:
    Throughput:
      units: bits/sec
      miny: 0

      graphpoints:
        Inbound:
          dpName: bytesReceivedSec
          rpn: 8,*
          format: "%7.2lf%s"

        Outbound:
          dpName: bytesReceivedSec
          rpn: 8,*
          format: "%7.2lf%s"

    Packets:
      units: packets/sec
      miny: 0

      graphpoints:
        Inbound:
          dpName: packetsReceivedSec
          format: "%7.2lf%s"

        Outbound:
          dpName: packetsSentSec
          format: "%7.2lf%s"

    Errors:
      units: errors/sec
      miny: 0

      graphpoints:
        Receive:
          dpName: packetsReceivedErrors
          format: "%7.2lf%s"

        Send:
          dpName: packetsSentErrors
          format: "%7.2lf%s"
